---
import { getCollection, getEntry } from 'astro:content';

import Layout from '../../layouts/Layout/Layout.astro';
import MetaHead from '../../components/MetaHead.astro';

export interface Params {
  slug: string;
}
export type Props = Params;

// const sidebarSections = [
//   {
//     title: 'Про проєкт',
//     items: [
//       {
//         title: 'Кілька слів про нас',
//         path: '/docs',
//       },
//       {
//         title: 'Як відбувається переклад',
//         path: '/docs/translation',
//       },
//       {
//         title: 'Як перекладати в середовищі GitHub',
//         path: '/docs/translating-in-github',
//       },
//       {
//         title: 'Прийняті патерни іменування в репозиторіях',
//         path: '/docs/git-naming-conventions',
//       },
//       { title: 'Словник термінів', path: '/docs/glossary' },
//       { title: 'Ліцензії на вміст WebDoky', path: '/docs/licensing' },
//     ],
//   },
// ];
export async function getStaticPaths() {
  const entries = await getCollection('internal-content');
  return entries.map((entry) => ({
    params: {
      slug: entry.slug,
    },
  }));
}

const slug = Astro.params.slug || Astro.props.slug;
const page = await getEntry('internal-content', slug);
const { Content } = await page.render();

const {
  data: { description, title },
} = page;
---

<Layout title={`${title} — Про нас | ВебДоки`}>
  <MetaHead
    slot="head"
    title={title}
    description={description}
    canonicalPath={`/${slug}`}
  />
  <main class="wd-doc-page">
    <h1>{title}</h1>
    <div class="flex flex-wrap items-start justify-start">
      <div class="order-1 w-full md:w-2/3">
        <div class="wd-content"><Content /></div>

        <div class="mt-8 pt-8 lg:mt-12 lg:pt-12 border-t border-ui-border">
          <!-- <NextPrevLinks page={page} pages={allPages} /> -->
        </div>
      </div>

      <div
        class="order-2 w-full md:w-1/3 sm:pl-4 md:pl-6 lg:pl-8 sticky"
        style={{ top: '4rem' }}>
        <!-- <WdOnThisPage headings={headings} page={page} /> -->
      </div>
    </div>
  </main>
</Layout>

<style is:global lang="scss">
  .wd-doc-page {
    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
      @apply -mt-12 pt-20;
    }

    h2 + h3,
    h2 + h2,
    h3 + h3 {
      @apply border-none -mt-20;
    }

    h2,
    h3 {
      @apply border-b border-ui-border pb-1 mb-3;
    }

    ul {
      @apply list-disc;

      ul {
        list-style: circle;
      }
    }

    ol {
      @apply list-decimal;
    }

    ol,
    ul {
      @apply pl-5 py-1;

      li {
        @apply mb-2;

        p {
          @apply mb-0;
        }

        &:last-child {
          @apply mb-0;
        }
      }
    }

    dl dd {
      margin: 0 1.5em;
    }

    blockquote {
      @apply border-l-4 border-ui-border py-2 pl-4;

      p:last-child {
        @apply mb-0;
      }
    }

    h1 {
      @apply text-4xl;

      // needs for responsive page titles
      word-break: break-word;
    }

    h2 {
      @apply text-2xl;
    }

    h3 {
      @apply text-xl;
    }

    h4 {
      @apply text-lg;
    }

    p,
    ol,
    ul,
    pre,
    strong,
    blockquote {
      @apply mb-4 text-base text-ui-typo;
    }

    code {
      @apply px-1 text-ui-typo bg-ui-sidebar border-b border-r border-ui-border text-sm rounded;

      padding-top: 0.125em;
      padding-bottom: 0.125em;
    }

    a > code {
      color: inherit;
    }

    pre {
      z-index: 0;

      @apply px-5 py-4 max-w-full overflow-x-auto rounded;

      & + p {
        @apply mt-4;
      }

      & > code[class*='language-'] {
        @apply px-0 border-none leading-relaxed;
      }
    }

    header {
      background-color: rgb(255 255 255 / 90%);
      backdrop-filter: blur(4px);
    }

    footer {
      a {
        @apply text-ui-primary underline;
      }
    }

    table {
      @apply text-left mb-6;

      td,
      th {
        @apply py-3 px-4;

        &:first-child {
          @apply pl-0;
        }

        &:last-child {
          @apply pr-0;
        }
      }

      tr {
        @apply border-b border-ui-border;

        &:last-child {
          @apply border-b-0;
        }
      }
    }

    .badge-inline svg {
      @apply inline mr-1;
    }

    .badge-inline.badge-readonly,
    .badge-inline.badge-optional {
      @apply px-1 py-1 bg-ui-sidebar border-b border-r border-ui-border text-sm rounded font-bold italic;
    }

    .sidebar {
      @apply fixed bg-ui-background px-4 inset-x-0 bottom-0 w-full border-r border-ui-border overflow-y-auto transition-all z-40;

      transform: translateX(-100%);

      &.open {
        transform: translateX(0);
      }

      @screen lg {
        @apply w-1/4 px-0 bg-transparent top-0 bottom-auto inset-x-auto sticky z-0;

        transform: translateX(0);
      }
    }
  }
</style>
